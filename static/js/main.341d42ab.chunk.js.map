{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","index.js"],"names":["Navbar","className","to","style","color","backgroundColor","borderRadius","BlogList","blogs","title","handleDelete","map","blog","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.341d42ab.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className = \"navbar\">\r\n            <h1>The Assassin's Blog</h1>\r\n            <div className = \"links\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/create\" style = {{\r\n                    color: \"white\",\r\n                    backgroundColor: '#25d415',\r\n                    borderRadius: '8px'\r\n                }}>New Blog</Link>\r\n                </div> \r\n        </nav>\r\n      );\r\n}\r\n \r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = ({blogs,title,handleDelete}) => {\r\n    // const blogs = props.blogs;\r\n    // const title = props.title;\r\n    return (\r\n        <div className=\"blog-list\">\r\n            <h2>{title}</h2>\r\n            {blogs.map((blog) => (\r\n                <div className=\"blog-preview\" key = {blog.id}>\r\n                    <Link to = {`/blogs/${blog.id}`}>\r\n                    <h2>{blog.title}</h2>\r\n                    <p>Written by {blog.author}</p>\r\n                    {/* <button onClick = {() => handleDelete(blog.id)}>Delete Blog</button> */}\r\n                    </Link>\r\n                </div>\r\n            ))}\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default BlogList;","import { useState, useEffect } from 'react'\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController();\r\n\r\n        setTimeout(() => {\r\n            fetch(url,{signal:abortCont.signal})\r\n            .then(res => {\r\n                if(!res.ok){\r\n                    throw Error(\"Data not Fetched\");\r\n                }\r\n                return res.json();\r\n        })\r\n        .then(data => {\r\n            //console.log(data);\r\n            setData(data);\r\n            setIsPending(false);\r\n            setError(null);\r\n        })\r\n        .catch(err => {\r\n            if(err.name === 'AbortError')\r\n            {\r\n                console.log('Fetch Aborted');\r\n            }\r\n            else\r\n            {\r\n                setIsPending(false);\r\n                setError(err.message);\r\n            }\r\n            })\r\n    });\r\n        // console.log('Use Effect Ran');\r\n        // console.log(name);\r\n        return () => abortCont.abort();\r\n    }, [url]); // [name] <- 2nd hook arguement makes sure the useEffect runs only on the first render\r\n    \r\n    return {data, isPending, error};\r\n}\r\nexport default useFetch;\r\n\r\n","import BlogList from './BlogList';\r\nimport useFetch from './useFetch';\r\n\r\nconst Home = () => {    \r\n\r\n    \r\n    //const [name, setName] = useState('mario')\r\n\r\n    // const handleDelete = (id) => {\r\n    //     const newBlogs = blogs.filter(blog => blog.id !== id)\r\n    //     setBlogs(newBlogs); \r\n    // }\r\n\r\n    const {data:blogs, isPending, error} = useFetch('http://localhost:8000/blogs');\r\n\r\n\r\n\r\n    \r\n\r\n    return (     \r\n        <div className = \"home\">\r\n            {error && <div>{ error }</div> }\r\n            {isPending && <div>Loading...</div>}\r\n            {blogs && <BlogList blogs = {blogs} title = \"All Blogs\"></BlogList>}\r\n            {/* <BlogList blogs = {blogs.filter((blog) => blog.author === 'mario')} title = \"Mario's Blogs\"></BlogList>\r\n            <button onClick = {() => setName('luigi')}>Change Name</button>\r\n            <p>{name}</p> */}\r\n        </div>\r\n    );\r\n     \r\n    /* For useState hooks - Lecture 8\r\n    const [name, setName] = useState('Mario');\r\n    const [age, setAge] = useState(25);\r\n    const handleClick = () => {\r\n        setName('Luigi');  \r\n        setAge(30);      \r\n    }\r\n    return (     \r\n        <div className = \"home\">\r\n            <h2>Homepage</h2>\r\n            <p>{name} is {age} years old.</p>\r\n            <button onClick = {handleClick}>Click Me!</button>\r\n\r\n        </div>\r\n    );*/\r\n}\r\n \r\nexport default Home;","import { useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nconst Create = () => {\r\n    const [title,setTitle] = useState('');\r\n    const [body,setBody] = useState('');\r\n    const [author,setAuthor] = useState('Mario');\r\n    const [isPending, setIsPending] = useState(false);\r\n    const history = useHistory(); \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const blog = {title, body, author};\r\n\r\n        setIsPending(true);\r\n        \r\n        fetch('http://localhost:8000/blogs', {\r\n            method: 'POST',\r\n            headers: {\"Content-Type\":\"application/json\"},\r\n            body: JSON.stringify(blog)\r\n        }).then(() => {\r\n            console.log('New Blog Added');\r\n            setIsPending(false);\r\n            //history.go(-1);\r\n            history.push('/');\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className = \"create\">\r\n            <h2>Add a New Blog</h2>\r\n            <form onSubmit = {handleSubmit}>\r\n                <label>Blog Title:</label>\r\n                <input type=\"text\"\r\n                required \r\n                value = {title}\r\n                onChange = {(e) => setTitle(e.target.value)}/>\r\n                <label>Blog body:</label>\r\n                <textarea  \r\n                required\r\n                value = {body}\r\n                onChange = {(e) => setBody(e.target.value)}\r\n                ></textarea>\r\n                <label>Blog Author:</label>\r\n                <select\r\n                value = {author}\r\n                onChange = {(e) => setAuthor(e.target.value)}\r\n                >\r\n                    <option value=\"Mario\">Mario</option>\r\n                    <option value=\"Yoshi\">Yoshi</option>\r\n                </select>\r\n                {!isPending && <button>Add Blog</button>}\r\n                {isPending && <button disabled>Adding Blog...</button>}\r\n                <p>{title}</p>\r\n                <p>{body}</p>\r\n                <p>{author}</p>\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Create;","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n  const { id } = useParams();\r\n  const { data: blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id);\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    fetch('http://localhost:8000/blogs/' + blog.id, {\r\n      method: 'DELETE'\r\n    }).then(() => {\r\n      history.push('/');\r\n    }) \r\n  }\r\n\r\n  return (\r\n    <div className=\"blog-details\">\r\n      { isPending && <div>Loading...</div> }\r\n      { error && <div>{ error }</div> }\r\n      { blog && (\r\n        <article>\r\n          <h2>{ blog.title }</h2>\r\n          <p>Written by { blog.author }</p>\r\n          <div>{ blog.body }</div>\r\n          <button onClick={handleClick}>delete</button>\r\n        </article>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default BlogDetails;","import { Link } from \"react-router-dom\"\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <h2>Sorry</h2>\r\n      <p>That page cannot be found</p>\r\n      <Link to=\"/\">Back to the homepage...</Link>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default NotFound;","import Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            <Route path=\"/blogs/:id\">\n              <BlogDetails />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}